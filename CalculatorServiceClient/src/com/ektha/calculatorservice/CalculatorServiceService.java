package com.ektha.calculatorservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2019-05-14T11:31:01.571-05:00
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "CalculatorServiceService",
                  wsdlLocation = "file:/C:/bootcampjan2019/development/CoreJava/CalculatorService/WebContent/wsdl/calculatorservice.wsdl",
                  targetNamespace = "http://calculatorservice.ektha.com/")
public class CalculatorServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://calculatorservice.ektha.com/", "CalculatorServiceService");
    public final static QName CalculatorServicePort = new QName("http://calculatorservice.ektha.com/", "CalculatorServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/bootcampjan2019/development/CoreJava/CalculatorService/WebContent/wsdl/calculatorservice.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CalculatorServiceService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/bootcampjan2019/development/CoreJava/CalculatorService/WebContent/wsdl/calculatorservice.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CalculatorServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CalculatorServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CalculatorServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CalculatorServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CalculatorServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CalculatorServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CalculatorService
     */
    @WebEndpoint(name = "CalculatorServicePort")
    public CalculatorService getCalculatorServicePort() {
        return super.getPort(CalculatorServicePort, CalculatorService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorService
     */
    @WebEndpoint(name = "CalculatorServicePort")
    public CalculatorService getCalculatorServicePort(WebServiceFeature... features) {
        return super.getPort(CalculatorServicePort, CalculatorService.class, features);
    }

}
